//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Langtang.DataAccessLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HimalDbEntities : DbContext
    {
        public HimalDbEntities()
            : base("name=HimalDbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Personnel> Personnels { get; set; }
        public virtual DbSet<LookupIdentifier> LookupIdentifiers { get; set; }
        public virtual DbSet<Profile> Profiles { get; set; }
        public virtual DbSet<ProfileIdentifier> ProfileIdentifiers { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<OdsPerson> OdsPersons { get; set; }
        public virtual DbSet<Personnel1> Personnel1 { get; set; }
        public virtual DbSet<Personnel2> Personnel2 { get; set; }
        public virtual DbSet<vPersonnel> vPersonnels { get; set; }
    
        public virtual ObjectResult<TestProc_Result> TestProc(string stringSearch)
        {
            var stringSearchParameter = stringSearch != null ?
                new ObjectParameter("stringSearch", stringSearch) :
                new ObjectParameter("stringSearch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TestProc_Result>("TestProc", stringSearchParameter);
        }
    }
}
